<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dou.dao.CheckGroupDao">

    <!--多对多关系映射-->
    <resultMap id="baseResultMap" type="com.dou.pojo.CheckGroup">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="code" property="code"/>
        <result column="helpCode" property="helpCode"/>
        <result column="sex" property="sex"/>
        <result column="remark" property="remark"/>
        <result column="attention" property="attention"/>
    </resultMap>

    <!-- 配置一对多的关系
                    property：填写pojo类中集合类类属性的名称
               ofType:填写pojo类中集合类的类型
               select：查询集合类的方法，在mapper.xml中定义
                  column:查询集合类的条件列
    -->
    <resultMap id="findByIdResultMap" type="com.dou.pojo.CheckGroup" extends="baseResultMap">
        <!--检查组和检查项多对多关联查询-->
        <collection property="checkItems"
                    ofType="com.dou.pojo.CheckItem"
                    column="id"
                    select="com.dou.dao.CheckItemDao.findCheckItemById"
        ></collection>
    </resultMap>

    <!--插入检查组数据-->
    <insert id="add" parameterType="com.dou.pojo.CheckGroup">
        <!--通过mybatis框架提供的selectKey标签获得自增产生的ID值-->
        <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
        select LAST_INSERT_ID()
        </selectKey>
        insert into t_checkgroup(code,name,sex,helpCode,remark,attention)
        values
        (#{code},#{name},#{sex},#{helpCode},#{remark},#{attention})
    </insert>

    <!--一对多关系-->
    <insert id="setCheckGroupAndCheckItem" parameterType="map">
        insert into t_checkgroup_checkitem(checkgroup_id,checkitem_id)
        values
        (#{checkgroupId},#{checkitemId})
    </insert>

    <!--分页查询和条件查询-->
    <select id="findByCondition" parameterType="string" resultType="com.dou.pojo.CheckGroup">
        select * from t_checkgroup
        <if test="value != null and value.length > 0">
            where code like concat('%',#{value},'%') or name like concat('%',#{value},'%') or helpCode like concat('%',#{value},'%')
        </if>
    </select>

<!--根据id查询检查组数据-->
    <select id="findById" parameterType="int" resultType="com.dou.pojo.CheckGroup">
        select  * from  t_checkgroup where id=#{id}
    </select>

    <!--根据检查组id查询关联的多个检查项id,查询中间关系表-->
    <select id="findCheckItemIdsByCheckGroupId" resultType="java.lang.Integer">
        select checkitem_id from t_checkgroup_checkitem where checkgroup_id=#{id}
    </select>
    <!--编辑检查组-->
    <update id="edit" parameterType="com.dou.pojo.CheckGroup">
        update t_checkgroup
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="code != null">
                code = #{code},
            </if>
            <if test="helpCode != null">
                helpCode = #{helpCode},
            </if>
            <if test="attention != null">
                attention = #{attention},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--清理关联关系-->
    <delete id="deleteAssoication" parameterType="int">
    delete  from t_checkgroup_checkitem where checkgroup_id=#{id}
    </delete>

    <!--//删除检查组-->
    <delete id="delete" parameterType="int">
        delete from t_checkgroup where id=#{id}
    </delete>

    <select id="findAll" resultType="com.dou.pojo.CheckGroup">
        select * from t_checkgroup
    </select>

    <!--移动端根据套餐ID查询关联的检查组详情-->
    <select id="findCheckGroupById" parameterType="int" resultMap="findByIdResultMap">
        select * from t_checkgroup where id in (select checkgroup_id from t_setmeal_checkgroup where setmeal_id = #{setmeal_id})
    </select>

</mapper>